akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]

  http.server = {
    parsing.max-content-length = 3GB
    parsing.max-content-length = ${?AKKA_HTTP_MAX_CONTENT_LENGTH}
    request-timeout = 5 minutes
    request-timeout = ${?AKKA_HTTP_REQUEST_TIMEOUT}
    idle-timeout = 5 minutes
    idle-timeout = ${?AKKA_HTTP_IDLE_TIMEOUT}
    max-connections = 1024
    max-connections = ${?AKKA_HTTP_MAX_CONNECTIONS}
  }

  actor.deployment {
    "/usage-router/*" {
      dispatcher = blocking-io-dispatcher
    }
  }
}

blocking-io-dispatcher {
  type = Dispatcher
  executor = "thread-pool-executor"
  thread-pool-executor {
    fixed-pool-size = 32
  }
  throughput = 1
}

ats.treehub {

  database = {
    driver = "org.mariadb.jdbc.Driver"
    url = "jdbc:mariadb://localhost:3306/ota_treehub"
    url = ${?DB_URL}
    properties {
      user = "treehub"
      user = ${?DB_USER}
      password = "treehub"
      password = ${?DB_PASSWORD}
    }
    numThreads = 20
    numThreads = ${?DB_NUM_THREADS}
    queueSize = 1000
    queueSize = ${?DB_QUEUE_SIZE}
    registerMbeans = true
    flyway.schema-table = "schema_version"
    flyway.locations = [ "db/migration/treehub" ]
  }

  http.server = {
    host = "0.0.0.0"
    host = ${?BIND_HOST}
    port = 8084
    port = ${?BIND_PORT}
    treehubUri = "http://"${ats.treehub.http.server.host}":"${ats.treehub.http.server.port}
    treehubUri = ${?TREEHUB_HOSTNAME}
  }

  storage {
    type = "s3" // or local
    type = ${?TREEHUB_STORAGE}

    staleObjectsExpireAfter = 1 hour
    staleObjectsExpireAfter = ${?TREEHUB_STALE_OBJECTS_EXPIRE_AFTER}

    local = {
      path = "/tmp/treehub"
      path = ${?TREEHUB_LOCAL_STORE_PATH}
    }

    s3 = {
      accessKey = ${?TREEHUB_AWS_ACCESS_KEY}
      secretKey = ${?TREEHUB_AWS_SECRET_KEY}
      bucketId = ${?TREEHUB_AWS_BUCKET_ID}
      deltasBucketId = ${?DELTAS_AWS_BUCKET_ID}
      region = "eu-central-1"
      region = ${?TREEHUB_AWS_REGION}
      allowRedirects = false
      allowRedirects = ${?TREEHUB_REDIRECT_DOWNLOADS}
      endpointUrl = ""
      endpointUrl = ${?TREEHUB_S3_ENDPOINTURL}
    }
  }
}
